version: "3.8"

services:
  postgres-primary:
    image: postgres:16
    container_name: postgres-primary
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: >
      postgres
      -c listen_addresses='*'
      -c wal_level=replica
      -c max_wal_senders=3
      -c max_replication_slots=10
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c max_connections=100
      -c log_statement=all
      -c log_min_duration_statement=1000
      -c password_encryption=scram-sha-256
    ports:
      - "${PRIMARY_PORT:-5442}:5432"
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./scripts/00_init.sh:/docker-entrypoint-initdb.d/00_init.sh
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-replica:
    image: postgres:16
    container_name: postgres-replica
    user: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      PGUSER: ${POSTGRES_USER:-postgres}
      PGPASSWORD: ${REPLICATOR_PASSWORD:-replicator123}
      PRIMARY_HOST: ${PRIMARY_HOST:-postgres-primary}
      REPLICATOR_USER: ${REPLICATOR_USER:-replicator}
      REPLICATION_SLOT: ${REPLICATION_SLOT:-replica_slot}
    command: |
      bash -c "
      # Remove existing data directory if it exists
      rm -rf /var/lib/postgresql/data/*

      # Run pg_basebackup without creating slot since it should exist now
      until PGPASSWORD=$$PGPASSWORD pg_basebackup -h $$PRIMARY_HOST -D /var/lib/postgresql/data -U $$REPLICATOR_USER -v -R -X stream -S $$REPLICATION_SLOT
      do
        echo 'Waiting for primary to connect...'
        sleep 1s
      done

      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    ports:
      - "${REPLICA_PORT:-5443}:5432"
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    networks:
      - postgres-network
    depends_on:
      postgres-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_primary_data:
  postgres_replica_data:

networks:
  postgres-network:
    driver: bridge
